<?xml version="1.0" encoding="UTF-8"?>
<mule 
	xmlns:batch="http://www.mulesoft.org/schema/mule/batch"
	xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" 
	xmlns="http://www.mulesoft.org/schema/mule/core" 
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation=" 
		http://www.mulesoft.org/schema/mule/ee/core 
		http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd 
		http://www.mulesoft.org/schema/mule/core 
		http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/salesforce 
		http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd
		http://www.mulesoft.org/schema/mule/batch 
		http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd">

    <flow name="endpoint-address">     
        <flow-ref doc:name="initialize batch" name="initialize-batch"/>

        <!-- Look for all contactId keys -->
        <flow-ref doc:name="query contact" name="query-contact"/>
        <!-- <logger level="DEBUG" category="app" message="#[output application/json - vars.listIds]" /> -->

        <flow-ref doc:name="analyze input records" name="analyze-input-records-contact"/>

		<choice doc:name="found all keys in Salesforce?" >
            <when expression='#[vars.missingIds.totalMissing == 0]'>
                <!-- Notes:
                    - Update account with primary address
                    - The list of records to update in Account Object can be less than the input records,
                    because only the primary are updated.
                -->

                <ee:transform doc:name="Update account with primary address">
                    <ee:message >
                        <ee:set-payload ><![CDATA[%dw 2.0
                        output application/java
                        import * from dw::core::Strings
                        ---
                        vars.originalPayload filter ( $.primary == true )
                            map (address) -> {
                                'Id' : (vars.listIds filter ( $.contactId == address.contactId )).id[0],
                                'PersonMailingStreet':               trim( (address.address1 default '') ++ ' ' ++
                                                                     (address.address2 default '') ++ ' ' ++
                                                                     (address.address3 default '') ) withMaxSize  150,
                                'PersonMailingCity':                 if (!isEmpty(address.city)) address.city else "#N/A",
                                'PersonMailingPostalCode':           if (!isEmpty(address.zipCode)) address.zipCode else "#N/A",
                                'SSOT_PersonMailingCountryCode__pc': if (!isEmpty(address.country)) address.country else "#N/A",
                                'SSOT_PersonMailingStateCode__pc':   if (!isEmpty(address.state)) address.state 
                            }
                        ]]>
                        </ee:set-payload>
                    </ee:message>
                </ee:transform>
                <!--
                    The next code was before the introduction of the salesforce script to update state and country:

                    'PersonMailingCountryCode':if (!isEmpty(address.country)) address.country else "#N/A",
                    'PersonMailingStateCode':  if ( isEmpty(address.state) ) 
                                                    "#N/A"
                                            else
                                                    if (!isEmpty(address.country)
                                                        and (["US","CA","MX"] contains address.country) )
                                                        if ( (address.state  contains('-')) or (address.state contains('_')))
                                                            "#N/A"
                                                        else 
                                                            address.state
                                                    else
                                                        "#N/A"
                -->

                <set-variable doc:name="temporal original payload" variableName="temporalPayload" value="#[vars.originalPayload]" />
                <set-variable doc:name="Salesforce object" variableName="salesforceObject" value="Account" />
                <set-variable doc:name="operation" variableName="bulkOperation" value="update" />
                <set-variable doc:name="set externalIdField" variableName="externalIdField" value="Id"/>
                <flow-ref doc:name="run job" name="job-bulk"/>

        		<set-variable doc:name="restore original payload for next flow" variableName="originalPayload" value="#[vars.temporalPayload]" />
		        <remove-variable doc:name="remove temporal payload" variableName="temporalPayload"/>

                <flow-ref doc:name="add records in address_c" name="address-list"/>
            </when>
        </choice>

        <flow-ref doc:name="service response" name="service-response"/>
        <error-handler ref="global-error-handler" />		
    </flow>
</mule>
