<?xml version="1.0" encoding="UTF-8"?>
<mule 
	xmlns:batch="http://www.mulesoft.org/schema/mule/batch"
	xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" 
	xmlns="http://www.mulesoft.org/schema/mule/core" 
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation=" 
		http://www.mulesoft.org/schema/mule/ee/core 
		http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd 
		http://www.mulesoft.org/schema/mule/core 
		http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/salesforce 
		http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd
		http://www.mulesoft.org/schema/mule/batch 
		http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd">

    <flow name="endpoint-email">     
        <flow-ref doc:name="initialize batch" name="initialize-batch"/>

        <!-- Update email in Account object in Salesforce -->

        <!-- Look for all contactId keys -->
		<flow-ref doc:name="query contact" name="query-contact"/>

        <flow-ref doc:name="analyze input records" name="analyze-input-records-contact"/>

		<choice doc:name="found all keys in Salesforce?" >
            <when expression='#[vars.missingIds.totalMissing == 0]'>

                <!-- Remove duplicated contactId that may come in the input payload -->

                <ee:transform doc:name="input record analisys" >
                    <ee:variables >
                        <ee:set-variable variableName="duplicateRecords"><![CDATA[%dw 2.0
                            output application/json

                            //Find repeated IDs in input payload
                            //https://dzone.com/articles/identifying-duplicate-values-in-an-array-using-mul

                            var filteredList =  vars.originalPayload distinctBy $.contactId
                            var filteredOnlyId = filteredList.contactId
                            var inputOnlyId = vars.originalPayload.contactId
                            var duplicates = (
                                filteredOnlyId map(key,value) -> {
                                    count : if (sizeOf((inputOnlyId map $ == key) filter $ ) > 1)
                                                key
                                            else 
                                                null
                                }
                            ) filter $.count !=null
                            ---
                            {
                                inputRecords:   sizeOf(vars.originalPayload),
                                duplicateTotal: sizeOf(vars.originalPayload) - sizeOf( filteredList ),
                                duplicateIds:   duplicates.count
                            }
                        ]]>
                        </ee:set-variable>	
                    </ee:variables>
                </ee:transform>
                <set-variable doc:name="save payload" variableName="originalPayload" value="#[vars.originalPayload distinctBy $.contactId]" />
                
                <ee:transform doc:name="build Salesforce payload for Account" >
                    <ee:message >
                        <ee:set-payload ><![CDATA[%dw 2.0
                        output application/java
                        ---
                        vars.originalPayload map (email) -> {
                            Id:                            (vars.listIds filter ( $.contactId == email.contactId )).id[0],
                            SSOT_PersonEmail__pc:          email.email,
                            SSOT_PersonEmailID__pc:        email.emailId,
                            SSOT_PersonEmail_Date_Time__pc:email.date as DateTime
                        }
                        ]]>
                        </ee:set-payload>
                    </ee:message>
                </ee:transform>
        
                <set-variable variableName="salesforceObject" value="Account" doc:name="Salesforce object" />
                <set-variable variableName="bulkOperation" value="update" doc:name="Salesforce object" />
        
                <flow-ref doc:name="run job" name="job-bulk"/>
            </when>
        </choice>

        <flow-ref doc:name="service response" name="service-response"/>
        <error-handler ref="global-error-handler" />		
    </flow>
</mule>
