<?xml version="1.0" encoding="UTF-8"?>
<mule 
	xmlns:batch="http://www.mulesoft.org/schema/mule/batch"
	xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" 
	xmlns="http://www.mulesoft.org/schema/mule/core" 
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation=" 
		http://www.mulesoft.org/schema/mule/ee/core 
		http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd 
		http://www.mulesoft.org/schema/mule/core 
		http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/salesforce 
		http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd
		http://www.mulesoft.org/schema/mule/batch 
		http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd">

    <flow name="endpoint-phone">     
        <flow-ref doc:name="initialize batch" name="initialize-batch"/>

        <!-- Update phone in Account object in Salesforce -->

        <!-- Look for all contactId keys -->
        <flow-ref doc:name="query contact" name="query-contact"/>

        <flow-ref doc:name="analyze input records" name="analyze-input-records-contact"/>

		<choice doc:name="found all keys in Salesforce?" >
            <when expression='#[vars.missingIds.totalMissing == 0]'>
        
                <!-- 1st transformation
                Input payload: vars.originalPayload
                [
                    {
                        "phoneId": "277944",
                        "contactId": "189372",
                        "type": "Cellular",
                        "number": "360-286-9222",
                        "primary": true,
                        "date": "2024-05-22T14:51:30.461Z"
                    },
                    {
                        "phoneId": "149446",
                        "contactId": "189372",
                        "type": "Home",
                        "number": "306-286-9222",
                        "primary": false,
                        "date": "2024-05-22T14:51:30.461Z"
                    }
                ]

                Output: payload
                [
                    {
                        "Id": "001OC000007gzhqYAA",
                        "PersonMobilePhone": "360-286-9222",
                        "SSOT_MobilePhone_ID__pc": "277944",
                        "SSOT_MobilePhone_Primary__pc": true,
                        "SSOT_MobilePhone_Date_Time__pc": "2024-05-22T14:51:30.461Z"
                    },
                    {
                        "Id": "001OC000007gzhqYAA",
                        "PersonHomePhone": "306-286-9222",
                        "SSOT_HomePhone_ID__pc": "149446",
                        "SSOT_HomePhone_Primary__pc": false,
                        "SSOT_HomePhone_Date_Time__pc": "2024-05-22T14:51:30.461Z"
                    }                
                ]
                -->
                <ee:transform doc:name="1st transformation" >
                    <ee:message >
                        <ee:set-payload ><![CDATA[%dw 2.0
                        output application/json
                        ---
                        vars.originalPayload map (item, index) -> {
                            'Id' : (vars.listIds filter ( $.contactId == item.contactId )).id[0],

                            // Celluar phone
                            ('PersonMobilePhone': item.number) if (item.'type' == "cellular"),
                            ('SSOT_MobilePhone_ID__pc': item.phoneId) if (item.'type' == "cellular"),
                            ('SSOT_MobilePhone_Primary__pc': item.primary) if (item.'type' == "cellular"),
                            ('SSOT_MobilePhone_Date_Time__pc': item.date as DateTime) if (item.'type' == "cellular"),
                            
                            // Home phone
                            ('PersonHomePhone': item.number) if (item.'type' == "home"),
                            ('SSOT_HomePhone_ID__pc': item.phoneId) if (item.'type' == "home"),
                            ('SSOT_HomePhone_Primary__pc': item.primary) if (item.'type' == "home"),
                            ('SSOT_HomePhone_Date_Time__pc': item.date as DateTime) if (item.'type' == "home"),

                            // Business phone
                            ('PersonOtherPhone': item.number) if (item.'type' == "business"),
                            ('SSOT_BusinessPhone_ID__pc': item.phoneId) if (item.'type' == "business"),
                            ('SSOT_BusinessPhone_Primary__pc': item.primary) if (item.'type' == "business"),
                            ('SSOT_BusinessPhone_Date_Time__pc': item.date as DateTime) if (item.'type' == "business"),

                            // Fax phone
                            ('Fax': item.number) if (item.'type' == "fax"),
                            ('SSOT_FaxPhone_ID__pc': item.phoneId) if (item.'type' == "fax"),
                            ('SSOT_FaxPhone_Primary__pc': item.primary) if (item.'type' == "fax"),
                            ('SSOT_FaxPhone_Date_Time__pc': item.date as DateTime) if (item.'type' == "fax"),
                        }
                        ]]>
                        </ee:set-payload>
                    </ee:message>
                </ee:transform>

                <!-- 2nd transformation. Merge duplicate records by Id, and fill with emptys for the unused phones. We use an aggregator
                function as desribed in next article: 
                https://help.mulesoft.com/s/question/0D52T00005wyFWCSA2/aggregate-objects-in-an-array-which-fields-has-same-values-in-dataweave
                
                Input payload:
                [
                    {
                        "Id": "001OC000007gzhqYAA",
                        "PersonMobilePhone": "360-286-9222",
                        "SSOT_MobilePhone_ID__pc": "277944",
                        "SSOT_MobilePhone_Primary__pc": true,
                        "SSOT_MobilePhone_Date_Time__pc": "2024-05-22T14:51:30.461Z"
                    },
                    {
                        "Id": "001OC000007gzhqYAA",
                        "PersonHomePhone": "306-286-9222",
                        "SSOT_HomePhone_ID__pc": "149446",
                        "SSOT_HomePhone_Primary__pc": false,
                        "SSOT_HomePhone_Date_Time__pc": "2024-05-22T14:51:30.461Z"
                    }                
                ]

                Output:
                [
                    {
                        "Id": "001OC000007gzhqYAA",
                        "PersonMobilePhone": "360-286-9222",
                        "SSOT_MobilePhone_ID__pc": "277944",
                        "SSOT_MobilePhone_Primary__pc": true,
                        "SSOT_MobilePhone_Date_Time__pc": "2024-05-22T14:51:30.461Z",
                        "PersonHomePhone": "306-286-9222",
                        "SSOT_HomePhone_ID__pc": "149446",
                        "SSOT_HomePhone_Primary__pc": false,
                        "SSOT_HomePhone_Date_Time__pc": "2024-05-22T14:51:30.461Z",
                        "PersonOtherPhone": "",
                        "SSOT_BusinessPhone_ID__pc": "",
                        "SSOT_BusinessPhone_Primary__pc": false,
                        "SSOT_BusinessPhone_Date_Time__pc": "",
                        "Fax": "",
                        "SSOT_FaxPhone_ID__pc": "",
                        "SSOT_FaxPhone_Primary__pc": false,
                        "SSOT_FaxPhone_Date_Time__pc": ""
                    }          
                ]
                -->

                <ee:transform doc:name="Update account with phones" >
                    <ee:message >
                        <ee:set-payload ><![CDATA[%dw 2.0
                        output application/java

                        //Combine records with same Id
                        var agg = payload groupBy $.Id mapObject ((value, key, index) -> 
                            (key) : (({(value map $)} distinctBy ((value, key) -> key )) )
                        )
                        ---
                        ( keysOf(agg) map(agg[$]) ) map (item, index) -> {

                            Id:item.Id,

                            // Celluar phone
                            PersonMobilePhone:              if (!isEmpty(item.PersonMobilePhone))
                                                                item.PersonMobilePhone else '',
                            SSOT_MobilePhone_ID__pc:        if (!isEmpty(item.SSOT_MobilePhone_ID__pc))
                                                                item.SSOT_MobilePhone_ID__pc else '',
                            SSOT_MobilePhone_Primary__pc:   if (!isEmpty(item.SSOT_MobilePhone_Primary__pc)) 
                                                                item.SSOT_MobilePhone_Primary__pc else false,
                            SSOT_MobilePhone_Date_Time__pc: if (!isEmpty(item.SSOT_MobilePhone_Date_Time__pc)) 
                                                                item.SSOT_MobilePhone_Date_Time__pc else '',

                            // Home phone
                            PersonHomePhone:             if (!isEmpty(item.PersonHomePhone))
                                                            item.PersonHomePhone else '',
                            SSOT_HomePhone_ID__pc:       if (!isEmpty(item.SSOT_HomePhone_ID__pc)) 
                                                            item.SSOT_HomePhone_ID__pc else '',
                            SSOT_HomePhone_Primary__pc:  if (!isEmpty(item.SSOT_HomePhone_Primary__pc))
                                                            item.SSOT_HomePhone_Primary__pc else false,
                            SSOT_HomePhone_Date_Time__pc:if (!isEmpty(item.SSOT_HomePhone_Date_Time__pc)) 
                                                            item.SSOT_HomePhone_Date_Time__pc else '',

                            // Business phone
                            PersonOtherPhone:                if (!isEmpty(item.PersonOtherPhone))
                                                                item.PersonOtherPhone else '',
                            SSOT_BusinessPhone_ID__pc:       if (!isEmpty(item.SSOT_BusinessPhone_ID__pc))
                                                                item.SSOT_BusinessPhone_ID__pc else '', 
                            SSOT_BusinessPhone_Primary__pc:  if (!isEmpty(item.SSOT_BusinessPhone_Primary__pc))
                                                                item.SSOT_BusinessPhone_Primary__pc else false,
                            SSOT_BusinessPhone_Date_Time__pc:if (!isEmpty(item.SSOT_BusinessPhone_Date_Time__pc))
                                                                item.SSOT_BusinessPhone_Date_Time__pc else '',

                            // Fax phone
                            Fax:                         if (!isEmpty(item.Fax)) 
                                                            item.Fax else '',
                            SSOT_FaxPhone_ID__pc:        if (!isEmpty(item.SSOT_FaxPhone_ID__pc)) 
                                                            item.SSOT_FaxPhone_ID__pc else '',
                            SSOT_FaxPhone_Primary__pc:   if (!isEmpty(item.SSOT_FaxPhone_Primary__pc)) 
                                                            item.SSOT_FaxPhone_Primary__pc else false,
                            SSOT_FaxPhone_Date_Time__pc: if (!isEmpty(item.SSOT_FaxPhone_Date_Time__pc))
                                                            item.SSOT_FaxPhone_Date_Time__pc else ''
                        }
                        ]]>
                        </ee:set-payload>
                    </ee:message>
                </ee:transform>
                
                <set-variable variableName="salesforceObject" value="Account" doc:name="Salesforce object" />
                <set-variable variableName="bulkOperation" value="update" doc:name="Salesforce object" />

                <flow-ref doc:name="run job" name="job-bulk"/>
            
            </when>
        </choice>
        
        <flow-ref doc:name="service response" name="service-response"/>
        <error-handler ref="global-error-handler" />		
    </flow>
</mule>
