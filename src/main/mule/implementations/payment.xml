<?xml version="1.0" encoding="UTF-8"?>
<mule 
	xmlns:batch="http://www.mulesoft.org/schema/mule/batch"
	xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" 
	xmlns="http://www.mulesoft.org/schema/mule/core" 
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation=" 
		http://www.mulesoft.org/schema/mule/ee/core 
		http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd 
		http://www.mulesoft.org/schema/mule/core 
		http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/salesforce 
		http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd
		http://www.mulesoft.org/schema/mule/batch 
		http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd">

    <flow name="endpoint-payment">

        <flow-ref doc:name="initialize batch" name="initialize-batch"/>

        <!-- Look for all IIM_Account_Number__c keys to determine if the which input records will be create or update-->
        <flow-ref doc:name="query account" name="query-account"/>

        <!--  <set-variable doc:name="save account ids" variableName="listAccountIds" value="#[vars.listIds]"/>-->
          
        <ee:transform doc:name="build Salesforce payload for payment method object" >
            <ee:variables >
            
                        <!--'Customer_Short_Name__c':	item.CustomerShortName, -->
                <ee:set-variable variableName="payloadWithIds"><![CDATA[%dw 2.0
                    output application/java
                    ---
                    vars.originalPayload map (item, index) -> {
                        ID: 			  		item.ID,
								
                        'Beneficiary__r.Contact__c': 		item.contactId,
                        'DefaultFlag__c':                  	item.DefaultFlag,
                        'Payment_Type__c':   		 		item.PaymentType,
                        'Receiving_Bank_Name__c': 			item.ReceivingBankName,
                        'ABANumberCode__c': 	    		item.ABANumbercode,
                        'Credit_Account_Name__c': 		    item.CreditAcctName,
                        'Credit_Account_Number__c': 		item.CreditAcctNumber,
                        'Debit_Card_Flag__c': 			    item.DebitCardFlag,
                        'Combine_Check_Flag__c Contact__c':	item.CombineCheckFlag,
                        'ValidFrom__c': 			        item.date,
                        
                    }
                    ]]>
                </ee:set-variable>
            </ee:variables >
        </ee:transform>

        <!-- <logger level="DEBUG" category="app" message="#[output application/json - payload]" /> -->

        <!-- ***********************************************
            Discover the records to create in TrustAccount
            *********************************************** -->
        <ee:transform doc:name="get the records to create" >
            <ee:message >
                <ee:set-payload ><![CDATA[%dw 2.0
                    output application/java
                    ---
                    vars.payloadWithIds filter (isEmpty($.Id) )
                    ]]>
                </ee:set-payload>
            </ee:message>
        </ee:transform>

        <!-- <logger level="DEBUG" category="app" message="#[output application/json - payload]" /> -->

        <choice doc:name="Choice" >
            <when expression='#[ sizeOf(payload) > 0 ]'>

                <logger level="INFO" category="app" message="#['Records to create in Trust_Account__c: ' ++ sizeOf(payload) as String]" />

                <!-- *****************************************
                     Create AccountPerson Object in Salesforce 

                     Remove the null Id field in the records
                     ***************************************** -->
                <ee:transform doc:name="remove null ids" >
                    <ee:message >
                        <ee:set-payload ><![CDATA[%dw 2.0
                            output application/java
                            ---
                            payload map (items, index) -> (
                                items filterObject (value, key) -> value != null
                            )
                            ]]>
                        </ee:set-payload>
                    </ee:message>
                </ee:transform>

                <!-- <logger level="DEBUG" category="app" message="#[output application/json - payload]" /> -->
                <set-variable doc:name="set Salesforce object" variableName="salesforceObject" value="Payment_Method__c" />
                <set-variable doc:name="set operation" variableName="bulkOperation" value="insert"/>
                <set-variable doc:name="set externalIdField" variableName="externalIdField" value="Id"/>
                <flow-ref doc:name="run job" name="job-bulk"/>        
            </when>

        </choice>               


        <!-- *********************************************
            Get the records to update in Trust_Account__c
            ********************************************** -->
        <ee:transform doc:name="get the records to update Trust_Account__c" >
            <ee:message >
                <ee:set-payload ><![CDATA[%dw 2.0
                output application/java
                ---
                vars.payloadWithIds filter ( $.Id != null )
                ]]>
                </ee:set-payload>
            </ee:message>
        </ee:transform>

        <!-- <logger level="DEBUG" category="app" message="#[output application/json - payload]" /> -->

        <choice doc:name="Choice" >
            <when expression='#[ sizeOf(payload) > 0 ]'>

                <logger level="INFO" category="app" message="#['Records to update in Trust_Account__c: ' ++ sizeOf(payload) as String]" />

                <set-variable doc:name="set Salesforce object" variableName="salesforceObject" value="Trust_Account__c" />
                <set-variable doc:name="set operation" variableName="bulkOperation" value="update"/>
                <flow-ref doc:name="run job" name="job-bulk"/>

            </when>
        </choice>

        <flow-ref doc:name="service response" name="service-response"/>

        <error-handler ref="global-error-handler" />
    </flow>
</mule>
